[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kubeloom"
version = "0.1.0"
description = "Service mesh policy discovery and management for Kubernetes"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "kubeloom contributors"},
]
requires-python = ">=3.10"
dependencies = [
    "textual>=0.47.0",
    "rich>=13.7.0",
    "kubernetes>=28.1.0",
    "click>=8.1.7",
    "pyyaml>=6.0.1",
    "httpx>=0.25.2",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "mypy>=1.7.1",
    "ruff>=0.1.9",
    "black>=23.12.1",
    "pre-commit>=3.6.0",
]
test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.3",
    "mkdocstrings[python]>=0.24.0",
]

[project.scripts]
kubeloom = "kubeloom.cli:cli"

[project.urls]
Homepage = "https://github.com/adhityaravi/kubeloom"
Repository = "https://github.com/adhityaravi/kubeloom"
Issues = "https://github.com/adhityaravi/kubeloom/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/kubeloom"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
addopts = [
    "--verbose",
    "--cov=kubeloom",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["src/kubeloom"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
ignore_missing_imports = true
no_implicit_reexport = true

[tool.ruff]
target-version = "py310"
line-length = 120
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused import
"tests/*" = ["S101"]  # use of assert

[tool.black]
line-length = 120
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 120